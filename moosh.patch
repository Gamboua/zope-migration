diff --git a/Moosh/Command/Moodle23/Course/CourseCreate.php b/Moosh/Command/Moodle23/Course/CourseCreate.php
index b6812d9..dda00b6 100644
--- a/Moosh/Command/Moodle23/Course/CourseCreate.php
+++ b/Moosh/Command/Moodle23/Course/CourseCreate.php
@@ -21,6 +21,7 @@ class CourseCreate extends MooshCommand
         $this->addOption('F|format:', 'format (e.g. one of site, weeks, topics, etc.)');
         $this->addOption('i|idnumber:', 'id number');
         $this->addOption('v|visible:', 'visible (y or n, by default created visible)');
+        $this->addOption('t|tags:', 'tags separeted by \'|\'');
 
         $this->addArgument('shortname');
 
@@ -40,6 +41,7 @@ class CourseCreate extends MooshCommand
             $course->fullname = $options['fullname'];
             $course->shortname = $argument;
             $course->description = $options['description'];
+            $course->summary = $options['description'];
             $format = $options['format'];
             if(!$format){
             	$format = get_config('moodlecourse', 'format');
@@ -54,10 +56,11 @@ class CourseCreate extends MooshCommand
             }
             $course->visible = $visible;
             $course->category = $options['category'];
-            $course->summary = '';
-            $course->summaryformat = FORMAT_HTML;
-            $course->startdate = time();
 
+            $course->enablecompletion = 1;
+            $course->tags = isset($options['tags']) ? explode('|', $options['tags']) : null;
+            
+            
             //either use API create_course
             $newcourse = create_course($course);
 
diff --git a/Moosh/Command/Moodle26/Activity/ActivityAdd.php b/Moosh/Command/Moodle26/Activity/ActivityAdd.php
index c53085b..b9ab6da 100644
--- a/Moosh/Command/Moodle26/Activity/ActivityAdd.php
+++ b/Moosh/Command/Moodle26/Activity/ActivityAdd.php
@@ -27,6 +27,10 @@ class ActivityAdd extends MooshCommand
         $this->addOption('s|section:', 'section number', '1');
         $this->addOption('i|idnumber:', 'idnumber', null);
         $this->addOption('o|options:', 'any options that should be passed for activity creation', null);
+        $this->addOption('f|filepath:', 'file path to scorm');
+        $this->addOption('p|pages:', 'questions per page', 10);
+        $this->addOption('d|showdesc:', 'show description', 0);
+        $this->addOption('t|intro:', 'introduction label');
 
         $this->addArgument('activitytype');
         $this->addArgument('course');
@@ -59,16 +63,43 @@ class ActivityAdd extends MooshCommand
         // $options are course module options.
         $options = $this->expandedOptions;
 
-        if (!empty($options['name'])) {
+      	if (!empty($options['name'])) {
             $moduledata->name = $options['name'];
         }
         if (!empty($options['idnumber'])) {
             $moduledata->idnumber = $options['idnumber'];
         }
-
+        // set default value to scorm creation
+        $file = isset($options['options']) ? $options['options'] : 'singlescobasic.zip';
+        
         $moduledata->section = $options['section'];
-
-        $record = $generator->create_module($this->arguments[0], $moduledata);
+        
+        $parameters = array();
+        
+        if (!empty($options['pages'])) {
+            $parameters['questionsperpage'] = $options['pages'];
+        }
+        
+        if (!empty($options['filepath'])) {
+            $parameters['packagefilepath'] = $options['filepath'];
+            
+            preg_match('/[\w-_]+\/imsmanifest\.xml$/', $options['filepath'], $array);
+            print_r($array);
+            $parameters['source'] = $array[0];
+        }
+        
+        if  (!empty($options['showdesc'])) {
+            $parameters['showdescription'] = 1;            
+        }
+        
+        if  (!empty($options['intro'])) {
+            $parameters['intro'] = $options['intro'];            
+        }
+        
+        $parameters['gradepass'] = 7.00000;
+        $parameters['generalfeedbackimmediately'] = 2;
+        
+        $record = $generator->create_module($this->arguments[0], $moduledata, $parameters);
 
         if ($this->verbose) {
             echo "Activity {$this->arguments[0]} created successfully\n";
@@ -77,5 +108,4 @@ class ActivityAdd extends MooshCommand
         // Return the activity id.
         echo "{$record->id}\n";
     }
-
 }
diff --git a/Moosh/Command/Moodle26/Question/QuestionImport.php b/Moosh/Command/Moodle26/Question/QuestionImport.php
index 37d8630..8d1c0a2 100644
--- a/Moosh/Command/Moodle26/Question/QuestionImport.php
+++ b/Moosh/Command/Moodle26/Question/QuestionImport.php
@@ -14,7 +14,7 @@ class QuestionImport extends MooshCommand
 {
     public function __construct()
     {
-        parent::__construct('import', 'question');
+        parent::__construct('import', 'question', 'questionsperpage');
         $this->addArgument('questions.xml');
         $this->addArgument('quiz_id');
     }
@@ -25,7 +25,8 @@ class QuestionImport extends MooshCommand
 
         require_once($CFG->dirroot . '/question/editlib.php');
         require_once($CFG->dirroot . '/question/import_form.php');
-        require_once($CFG->dirroot . '/question/format.php');        
+        require_once($CFG->dirroot . '/question/format.php');
+        require_once($CFG->dirroot . '/lib/questionlib.php');
         $arguments = $this->arguments;
         $this->checkFileArg($arguments[0]);
 
@@ -36,10 +37,12 @@ class QuestionImport extends MooshCommand
         $coursecontext = \context_course::instance($course->id);
         $coursemodule = get_coursemodule_from_instance('quiz',$quiz->id);
         $quizcontext = \context_module::instance($coursemodule->id,MUST_EXIST);
+        $contexts = new \question_edit_contexts($quizcontext);
 
-        // Use existing questions category for quiz.
-        $category = $DB->get_record('question_categories',array('contextid'=>$coursecontext->id));
-        //$category = $DB->get_record("question_categories", array('id' => $category),MUST_EXIST);
+        // Use existing questions category for quiz or create the defaults.
+        if (!$category = $DB->get_record('question_categories',array('contextid'=>$coursecontext->id))) {
+          $category = question_make_default_categories($contexts->all());
+        }
 
         $formatfile = $CFG->dirroot .  '/question/format/xml/format.php';
         if (!is_readable($formatfile)) {
@@ -49,7 +52,7 @@ class QuestionImport extends MooshCommand
         require_once($formatfile);
 
         $qformat = new \qformat_xml();
-
+        var_dump($coursecontext->id);
         // load data into class
         $qformat->setCategory($category);
         $qformat->setContexts(array($quizcontext));
@@ -72,6 +75,16 @@ class QuestionImport extends MooshCommand
         if (!$qformat->importpostprocess()) {
             print_error('cannotimport', '');
         }
+
+        $addonpage = 1;
+        require_once($CFG->dirroot . '/mod/quiz/locallib.php');
+//         foreach ($qformat->questionids as $addquestion) {
+//             quiz_require_question_use($addquestion);
+//             quiz_add_quiz_question($addquestion, $quiz, $addonpage);
+            quiz_add_random_questions($quiz, $addonpage, $category->id, 10, 0);
+            quiz_delete_previews($quiz);
+            quiz_update_sumgrades($quiz);
+//         }
     }
 
     public function importQuiz($courseid, $quizid)
